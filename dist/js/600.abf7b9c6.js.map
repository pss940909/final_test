{"version":3,"file":"js/600.abf7b9c6.js","mappings":"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","sources":["webpack://vue_final_project/./src/views/DashBoard.vue","webpack://vue_final_project/./src/components/DashNav.vue","webpack://vue_final_project/./src/components/DashNav.vue?5f20","webpack://vue_final_project/../src/index.ts","webpack://vue_final_project/./src/methods/emitter.js","webpack://vue_final_project/./src/views/DashBoard.vue?836e"],"sourcesContent":["<template>\n  <nav-bar></nav-bar>\n  <div class=\"container-fluid\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport swal from \"sweetalert\";\nimport NavBar from \"../components/DashNav.vue\";\nimport emitter from \"@/methods/emitter\";\n\nexport default {\n  components: {\n    NavBar,\n  },\n  provide() {\n    return {\n      emitter,\n    };\n  },\n  created() {\n    // 從cookie中取出登入時存入的token\n    const loginToken = document.cookie.replace(\n      /(?:(?:^|.*;\\s*)loginToken\\s*=\\s*([^;]*).*$)|^.*$/,\n      \"$1\"\n    );\n    // 將token放到headers裡 (global)\n    this.axios.defaults.headers.common[\"Authorization\"] = loginToken;\n    const url = process.env.VUE_APP_API + \"/api/user/check\";\n    // 確認是否維持登入狀態\n    this.axios.post(url).then((res) => {\n      if (!res.data.success) {\n        swal({\n          title: \"請重新登入\",\n          text: \"登入效期已過\",\n          icon: \"warning\",\n          dangerMode: true,\n          timer: 2000,\n        });\n        this.$router.push(\"/login\");\n      }\n    });\n  },\n};\n</script>\n","<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">後台管理</a>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Features</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" @click.prevent=\"logout\">登出 </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link disabled\">Disabled</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\nexport default {\n  methods: {\n    logout() {\n      const url = process.env.VUE_APP_API + \"/logout\";\n      this.axios.post(url).then((res) => {\n        if (res.data.success) {\n          this.$router.push(\"/login\");\n        }\n      });\n    },\n  },\n};\n</script>\n","import { render } from \"./DashNav.vue?vue&type=template&id=6cbd25aa\"\nimport script from \"./DashNav.vue?vue&type=script&lang=js\"\nexport * from \"./DashNav.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<\n\tWildcardHandler<T>\n>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(\n\t\ttype: Key,\n\t\thandler?: Handler<Events[Key]>\n\t): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(\n\t\ttype: undefined extends Events[Key] ? Key : never\n\t): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t} else {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from (`'*'` to remove a wildcard handler)\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t} else {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","// using ES6 modules\nimport mitt from \"mitt\";\n\nconst emitter = mitt();\n\nexport default emitter;\n","import { render } from \"./DashBoard.vue?vue&type=template&id=7dcebcd0\"\nimport script from \"./DashBoard.vue?vue&type=script&lang=js\"\nexport * from \"./DashBoard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createVNode","_component_nav_bar","_createElementVNode","_hoisted_1","_component_router_view","href","type","id","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","onClick","_cache","_withModifiers","args","$options","logout","_hoisted_10","methods","url","process","this","axios","post","then","res","data","success","$router","push","__exports__","n","all","Map","on","t","e","i","get","set","off","splice","indexOf","emit","slice","map","emitter","mitt","components","NavBar","provide","created","loginToken","document","cookie","replace","defaults","headers","common","swal","title","text","icon","dangerMode","timer","render"],"sourceRoot":""}